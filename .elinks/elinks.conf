## ELinks 0.13.GIT configuration file

## This is ELinks configuration file. You can edit it manually,
## if you wish so; this file is edited by ELinks when you save
## options through UI, however only option values will be altered
## and missing options will be added at the end of file; if option
## is not written in this file, but in some file included from it,
## it is NOT counted as missing. Note that all your formatting,
## own comments and so on will be kept as-is.
##
## Obviously, if you don't like what ELinks is going to do with
## this file, you can change it by altering the config.saving_style
## option. Come on, aren't we friendly guys after all?



##############################
# Automatically saved options
#

## config 
#  Configuration handling options.

  ## config.saving_style_w [0|1]
  #  This is internal option used when displaying a warning about obsolete
  #  config.saving_style. You shouldn't touch it.
  set config.saving_style_w = 1


## ui 
#  User interface options.

  ## ui.language <language>
  #  Language of user interface. 'System' means that the language will be
  #  extracted from the environment dynamically.
  set ui.language = "System"





##############################
# Automatically saved options
#

## ui 
#  User interface options.

  ## ui.success_msgbox [0|1]
  #  When you pressed a [ Save ] button in some manager, this option will make
  #  sure that a box confirming success of the operation will pop up.
  set ui.success_msgbox = 1





##############################
# Automatically saved options
#

## bookmarks 
#  Bookmark options.

  ## bookmarks.file_format <num>
  #  File format for bookmarks (affects both reading and saving):
  #  0 is the default native ELinks format
  #  1 is XBEL universal XML bookmarks format
  set bookmarks.file_format = 0

  ## bookmarks.folder_state [0|1]
  #  When saving bookmarks also store whether folders are expanded or not, so
  #  the look of the bookmark dialog is kept across ELinks sessions. If disabled
  #  all folders will appear unexpanded next time ELinks is run.
  set bookmarks.folder_state = 1


## config 
#  Configuration handling options.

  ## config.indentation <num>
  #  Shift width of one indentation level in the configuration file. Zero means
  #  that no indentation is performed at all when saving the configuration.
  set config.indentation = 2

  ## config.saving_style <num>
  #  Determines what happens when you tell ELinks to save options:
  #  0 is only values of current options are altered
  #  1 is values of current options are altered and missing
  #       options are added at the end of the file
  #  2 is the configuration file is rewritten from scratch
  #  3 is values of current options are altered and missing
  #       options CHANGED during this ELinks session are added at
  #       the end of the file
  set config.saving_style = 3


## connection 
#  Connection options.

  ## connection.async_dns [0|1]
  #  Whether to use asynchronous DNS resolving.
  set connection.async_dns = 1

  ## connection.try_ipv4 [0|1]
  #  Whether to try to connect to a host over IPv4. Note that if
  #  connection.try_ipv6 is enabled too, it takes precedence. And better do not
  #  touch this at all unless you are sure what are you doing.
  #  
  #  Note that you can also force a given protocol to be used on a
  #  per-connection basis by using a URL in the style of e.g.
  #  http4://elinks.cz/.
  set connection.try_ipv4 = 1

  ## connection.unrestartable_receive_timeout <num>
  #  Timeout for non-restartable connections (in seconds).
  set connection.unrestartable_receive_timeout = 600


## cookies 
#  Cookies options.

  ## cookies.accept_policy <num>
  #  Cookies accepting policy:
  #  0 is accept no cookies
  #  1 is ask for confirmation before accepting cookie
  #  2 is accept all cookies
  set cookies.accept_policy = 2

  ## cookies.paranoid_security [0|1]
  #  When enabled, we'll require three dots in cookies domain for all
  #  non-international domains (instead of just two dots). Some countries have
  #  generic second level domains (eg. .com.pl, .co.uk) and allowing sites to
  #  set cookies for these generic domains could potentially be very bad. Note,
  #  it is off by default as it breaks a lot of sites.
  set cookies.paranoid_security = 0

  ## cookies.save [0|1]
  #  Whether cookies should be loaded from and saved to disk.
  set cookies.save = 1

  ## cookies.resave [0|1]
  #  Save cookies after each change in cookies list? No effect when cookie
  #  saving (cookies.save) is off.
  set cookies.resave = 1


## document 
#  Document options.

  ## document.cache 
  #  Cache options.

    ## document.cache.format 
    #  Format cache options.

      ## document.cache.format.size <num>
      #  Number of cached formatted pages. Do not get too generous here,
      #  'formatted' means that all the accompanying structures are kept in
      #  memory so that you get the cached document immediatelly, but these
      #  structures may take a lot - 2x the size of the HTML source is probably
      #  not unusual, but it can be even more if the document consists of a lot
      #  of short lines (padded right, if possible) and links and not much other
      #  markup. So if you set this to 256 and then you don't like your ELinks
      #  eating 90M, don't come complaining to us. ;-)
      #  
      #  Also note that the format cache itself is not counted to the memory
      #  cache size, but the HTML source of the formatted documents is always
      #  cached, even if it is over the memory cache size threshold. (Then of
      #  course no other documents can be cached.)
      set document.cache.format.size = 5


    ## document.cache.memory 
    #  Memory cache options.

      ## document.cache.memory.size <num>
      #  Memory cache size (in bytes).
      set document.cache.memory.size = 4M


    ## document.cache.cache_redirects [0|1]
    #  Cache even redirects sent by server (usually thru HTTP by a 302 HTTP code
    #  and a Location header). This was the original behaviour for quite some
    #  time, but it causes problems in a situation very common to various web
    #  login systems - frequently, when accessing a certain location, they will
    #  redirect you to a login page if they don't receive an auth cookie, the
    #  login page then gives you the cookie and redirects you back to the
    #  original page, but there you have already cached redirect back to the
    #  login page! If this option has value of 0, this malfunction is fixed, but
    #  occasionally you may get superfluous (depends on how you take it ;-)
    #  requests to the server. If this option has value of 1, experienced users
    #  can still workaround it by clever combination of usage of reload, jumping
    #  around in session history and hitting ctrl+enter.
    #  
    #  Note that this option is checked when retrieving the information from
    #  cache, not when saving it to cache - thus if you enable it, even previous
    #  redirects will be taken from cache instead of asking the server.
    set document.cache.cache_redirects = 0



## terminal 
#  Terminal options.

  ## terminal.linux 
  #  Options specific to this terminal type (according to $TERM value).

    ## terminal.linux.charset <codepage>
    set terminal.linux.charset = "System"
    ## terminal.linux.transparency [0|1]
    set terminal.linux.transparency = 0
    ## terminal.linux.colors <num>
    set terminal.linux.colors = 3
    ## terminal.linux.block_cursor [0|1]
    set terminal.linux.block_cursor = 0
    ## terminal.linux.m11_hack [0|1]
    set terminal.linux.m11_hack = 1
    ## terminal.linux.type <num>
    set terminal.linux.type = 2


## ui 
#  User interface options.

  ## ui.colors 
  #  Default user interface color settings.

    ## ui.colors.color 
    #  Color settings for color terminal.

      ## ui.colors.color.menu 
      #  Menu bar colors.

        ## ui.colors.color.menu.normal 
        #  Unselected menu item colors.

          ## ui.colors.color.menu.normal.text <color|#rrggbb>
          #  Default text color.
          set ui.colors.color.menu.normal.text = "black"





  ## ui.dialogs 
  #  Dialogs-specific appearance and behaviour settings.

    ## ui.dialogs.listbox_min_height <num>
    #  Minimal height of the listbox widget (used e.g. for bookmarks or global
    #  history).
    set ui.dialogs.listbox_min_height = 10


  ## ui.leds 
  #  LEDs (visual indicators) options.

    ## ui.leds.enable [0|1]
    #  Enable LEDs. These visual indicators will inform you about various
    #  states.
    set ui.leds.enable = 1


  ## ui.sessions 
  #  Sessions settings.

    ## ui.sessions.auto_restore [0|1]
    #  Automatically restore the session at start.
    #  
    #  This feature requires bookmark support.
    set ui.sessions.auto_restore = 0

    ## ui.sessions.auto_save [0|1]
    #  Automatically save the session when quitting.
    #  
    #  This feature requires bookmark support.
    set ui.sessions.auto_save = 1

    ## ui.sessions.auto_save_foldername <str>
    #  Name of the bookmarks folder used for auto saving and restoring session.
    #  The name has to be unique. Any folders with the same name will be
    #  deleted.
    #  
    #  This only makes sense with bookmark support.
    set ui.sessions.auto_save_foldername = "Auto saved session"

    ## ui.sessions.homepage <str>
    #  The URI to load either at startup time when no URI was given on the
    #  command line or when requested by the goto-url-home action. Set to "" if
    #  the environment variable WWW_HOME should be used as homepage URI instead.
    set ui.sessions.homepage = "www.baidu.com"

    ## ui.sessions.snapshot [0|1]
    #  Automatically save a snapshot of all tabs periodically. This will
    #  periodically bookmark the tabs of each terminal in a separate folder for
    #  recovery after a crash.
    #  
    #  This feature requires bookmark support.
    set ui.sessions.snapshot = 0


  ## ui.tabs 
  #  Window tabs settings.

    ## ui.tabs.show_bar <num>
    #  Show tabs bar on the screen:
    #  0 means never
    #  1 means only if two or more tabs are open
    #  2 means always
    set ui.tabs.show_bar = 2

    ## ui.tabs.top [0|1]
    #  Whether display tab bar at top like other browsers do.
    set ui.tabs.top = 0

    ## ui.tabs.wraparound [0|1]
    #  When moving right from the last tab, jump to the first one, and vice
    #  versa.
    set ui.tabs.wraparound = 1

    ## ui.tabs.confirm_close [0|1]
    #  When closing a tab show confirmation dialog.
    set ui.tabs.confirm_close = 0


  ## ui.show_ip [0|1]
  #  Whether to display IP of the document in the status bar.
  set ui.show_ip = 1

  ## ui.show_menu_bar_always [0|1]
  #  Always show menu bar on the screen.
  set ui.show_menu_bar_always = 0

  ## ui.show_status_bar [0|1]
  #  Show status bar on the screen.
  set ui.show_status_bar = 1

  ## ui.show_title_bar [0|1]
  #  Show title bar on the screen.
  set ui.show_title_bar = 1

  ## ui.startup_goto_dialog [0|1]
  #  Pop up goto dialog in newly created tabs when there's no homepage set. This
  #  means also showing goto dialog on startup.
  set ui.startup_goto_dialog = 1

  ## ui.window_title [0|1]
  #  Set the window title when running in a windowing environment in an
  #  xterm-like terminal. This way the document's title is shown on the window
  #  titlebar.
  set ui.window_title = 1


